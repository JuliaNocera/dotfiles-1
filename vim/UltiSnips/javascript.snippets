snippet _component "React Component" b
import React, { Component, PropTypes } from 'react'

export default class `!v expand("%:t:r")` extends Component {
	static propTypes = {
		${1:prop}: PropTypes.${2:string}
	}

	render() {
		const { $1 } = this.props
		$0
		return(
			${3:<div />}
		)
	}
}
endsnippet

snippet _container "React Container" b
import { connect } from 'react-redux'
import React, { Component, PropTypes } from 'react'

@connect(mapStateToProps)
export default class `!v expand("%:t:r")` extends Component {
	static propTypes = {
		${2:prop}: PropTypes.${3:string}
	}

	render() {
		const { $2 } = this.props
		$0
		return(
			${4:<div />}
		)
	}
}

function mapStateToProps(state) {
	return {
		${5:projects}: state.${6:projects}
	}
}
endsnippet

snippet log
console.log($1)
endsnippet

snippet props
this.props
endsnippet

snippet state
this.state
endsnippet

snippet cdm "component did mount" b
componentDidMount() {
	$1
}
endsnippet

snippet cwm "component will mount" b
componentWillMount() {
	$1
}
endsnippet

snippet cwu "component will unmount" b
componentWillUnmount() {
	$0
}
endsnippet

snippet imp "import" b
import $1 from '$2'
endsnippet

snippet pt "propTypes" b
static propTypes = {
	$1: PropTypes.$2
}

endsnippet

snippet if
if ($1) {
	$2
}
endsnippet

snippet if!
if (!$1) {
	$2
}
endsnippet

snippet bind
this.$1 = this.$1.bind(this)$0
endsnippet

snippet dp
static defaultProps = {
	$0
}
endsnippet

snippet con "constructor" b
constructor(props) {
	super(props)

	$0
}
endsnippet
